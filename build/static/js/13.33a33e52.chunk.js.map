{"version":3,"sources":["Components/Common/MblNavbar.js","Assets/NegativeSVG.svg","Components/DropDown/Location.js","Components/Header/Header.js","Components/Slots/Slots.js","Components/Packages/SourceLocation.svg","Components/Packages/DestinationLocation.svg","Components/Packages/CheckoutPackage.js","Components/Packages/Package.js"],"names":["connect","state","config","cartCount","cart","cartItems","length","withRouter","props","className","style","position","padding","top","width","backgroundColor","zIndex","paddingTop","display","alignItems","onClick","back","fontSize","color","aria-hidden","heading","to","module","exports","curLocation","branches","dispatch","changeLocation","payload","actionCreators","history","useHistory","useState","show","setShow","notifModal","Modal","onHide","centered","Body","fontWeight","map","branch","key","name","alignContent","loc","push","find","updateLocation","marginTop","id","src","logo","alt","handleDayChange","slots","handleSlotChange","scheduled","setScheduled","timeSlots","allSlots","Object","keys","availableSlots","setAvailableSlots","lastSlot","selectedTimeSlot","setSelectedTimeSlot","selectedDay","setSelectedDay","isTodayAvailable","setIsTodayAvailable","useEffect","currentD","Date","endSlotDay","setHours","start","slotValues","values","i","startSlot","slice","type","checked","onChange","size","drop","title","slot","Item","address","restaurant","setBackUrl","clearCart","addNewOrder","setCheckoutData","note","setNote","savedNote","setSavedNote","backUrl","location","pathname","isAuth","setShowToast","showNote","setShowNote","enablePlaceOrder","orderPlaced","error","Toast","onClose","delay","autohide","bottom","textAlign","left","transform","borderBottom","MblNavbar","hideCheckout","value","data-minimum","htmlFor","disabled","Slots","day","foo","justifyContent","paddingBottom","placeholder","e","target","autoComplete","margin","borderRadius","match","url","package","deletePickupAddress","deleteDropAddress","categories","baseUrl","selectedCategory","setSelectedCategory","isOneWay","setIsOneWay","showCheckout","setShowCheckout","pickAddress","pickUpAddress","dropAddress","handleShowCheckout","PackageHome","Image","pickupImg","fluid","area","dropImg","DropdownButton","category","index","Dropdown","eventKey","Header","goBack"],"mappings":"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","file":"static/js/13.33a33e52.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction MblNavbar(props) {\r\n  const cartCount = props.cartCount;\r\n  const navStyle = {\r\n    position: \"fixed\",\r\n    padding: \"0.5rem 1rem\",\r\n    top: \"0\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#2F4F4F\",\r\n    zIndex: \"10\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed-top align-middle\" style={navStyle}>\r\n      <div\r\n        style={{\r\n          paddingTop: \"4vh\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          onClick={props.back}\r\n          style={{\r\n            fontSize: \"20px\",\r\n            color: \"white\",\r\n            padding: \"0px 20px\",\r\n          }}\r\n        >\r\n          <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n        </div>\r\n        <span\r\n          style={{\r\n            fontSize: \"18px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {props.heading}\r\n        </span>\r\n        <Link to=\"/dashboard/cart\" className=\"option_links ml-auto mr-3\">\r\n          <i className=\"uil uil-shopping-cart-alt icon_wishlist\"></i>\r\n          <span className=\"noti_count1\">{cartCount}</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    config: state.config,\r\n    cartCount: state.cart.cartItems.length,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(MblNavbar));\r\n","module.exports = __webpack_public_path__ + \"static/media/NegativeSVG.ef8ca0ab.svg\";","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Menu.css\";\r\nimport * as actionCreators from \"../../Store/actions/index\";\r\n\r\nfunction Location(props) {\r\n  const history = useHistory();\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const branches = props.branches;\r\n  const [show, setShow] = useState(false);\r\n  const curLocation = props.curLocation;\r\n  const updateLocation = (loc) => {\r\n    setShow(false);\r\n    history.push(\"/\" + loc);\r\n    const payload = branches.find((branch) => branch.name === loc);\r\n    props.changeLocation(payload);\r\n  };\r\n  const notifModal = (\r\n    <Modal show={show} onHide={handleClose} centered>\r\n      <Modal.Body>\r\n        <h5 style={{ fontWeight: \"bold\", padding: \"0px 15px\" }}>\r\n          Select your Location\r\n        </h5>\r\n        {branches.map((branch) => (\r\n          <div\r\n            key={branch.name}\r\n            className=\"myLoc item drop-item\"\r\n            style={{ alignContent: \"left\" }}\r\n            onClick={() => updateLocation(branch.name)}\r\n          >\r\n            <i className=\"uil uil-location-point\"></i>\r\n            {branch.name}\r\n          </div>\r\n        ))}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {notifModal}\r\n      <div className=\"header-color\">\r\n        <span\r\n          className=\"btn\"\r\n          style={{ color: \"white\" }}\r\n          onClick={() => setShow(true)}\r\n        >\r\n          <i className=\"uil uil-location-point\"></i>\r\n          {curLocation ? curLocation : \"Pick Your Location\"}\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    curLocation: state.config.curLocation,\r\n    branches: state.config.branches,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeLocation: (payload) => dispatch(actionCreators.setLocation(payload)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./header.css\";\r\nimport Location from \"../DropDown/Location\";\r\nimport logo from \"../../Assets/NegativeSVG.svg\";\r\n\r\nfunction Header(props) {\r\n  // const backUrl = props.location.pathname;\r\n  // const isAuth = props.config.isAuth;\r\n  const curLocation = props.config.curLocation;\r\n  \r\n  return (\r\n    <nav\r\n      className=\"navbar header clearfix\"\r\n      style={{\r\n        backgroundColor: \"#2F4F4F\",\r\n        zIndex: \"10\",\r\n      }}\r\n    >\r\n      <div className=\"top-header-group\" style={{ marginTop: \"4vh\" }}>\r\n        <div className=\"float-left\">\r\n          <div className=\"res_main_logo\" id=\"logo\">\r\n            <Link to={\"/\" + curLocation}>\r\n              <img src={logo} alt=\"Right Delivers\" />\r\n            </Link>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"select_location d-flex float-right align-middle mt-2\">\r\n          <Location />\r\n          <Link to=\"/notifications\">\r\n             <i style={{color:\"white\",padding:\"0.4rem 1.0rem\"}} className=\"fa fa-bell\" aria-hidden=\"true\"></i>\r\n          </Link>\r\n        </div> \r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    config: state.config,\r\n    cartCount: state.cart.cartItems.length,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(Header));\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport './Slots.css';\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport { each, last } from 'lodash';\r\n\r\nfunction Slots({ config, slots={}, handleDayChange, handleSlotChange, scheduled = false, setScheduled}) {\r\n    const timeSlots = config.slots\r\n    const allSlots = Object.keys(timeSlots)\r\n    const [availableSlots, setAvailableSlots] = useState(Object.keys(timeSlots));\r\n    const lastSlot = timeSlots[Object.keys(timeSlots)[Object.keys(timeSlots).length - 1]]\r\n    const [selectedTimeSlot, setSelectedTimeSlot] = useState(allSlots[0]);\r\n    const [selectedDay, setSelectedDay] = useState(\"Today\");\r\n    const [isTodayAvailable, setIsTodayAvailable] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        const currentD = new Date();\r\n        const endSlotDay = new Date();\r\n        endSlotDay.setHours(lastSlot.start[0],lastSlot.start[1],lastSlot.start[2]);\r\n        if(currentD < endSlotDay){\r\n            setIsTodayAvailable(true)\r\n            setSelectedDay(\"Today\")\r\n            setAvailableSlots(allSlots)\r\n            setSelectedTimeSlot(allSlots[0])\r\n            handleSlotChange(allSlots[0])\r\n        }\r\n        else{\r\n            setSelectedDay(\"Tomorrow\")\r\n            handleDayChange(\"Tomorrow\")\r\n            setIsTodayAvailable(false)\r\n            setAvailableSlots(allSlots)\r\n            setSelectedTimeSlot(allSlots[0])\r\n            handleSlotChange(allSlots[0])\r\n        }\r\n    },[])\r\n    useEffect(()=>{\r\n        const currentD = new Date();\r\n        const slotValues = Object.values(timeSlots)\r\n\r\n        if(selectedDay === \"Today\"){\r\n            for(var i=0; i < slotValues.length; i++){\r\n                const startSlot = new Date();\r\n                startSlot.setHours(slotValues[i].start[0],slotValues[i].start[1],slotValues[i].start[2]);\r\n                if(currentD < startSlot){\r\n                    setAvailableSlots(allSlots.slice(i));\r\n                    setSelectedTimeSlot(allSlots.slice(i)[0])\r\n                    handleSlotChange(allSlots.slice(i)[0])\r\n                    handleDayChange(\"Today\")\r\n                    break;\r\n                }\r\n                else{\r\n                    continue;\r\n                }\r\n            }\r\n\r\n        }\r\n        else{\r\n            setSelectedDay(\"Tomorrow\")\r\n            handleDayChange(\"Tomorrow\")\r\n            setAvailableSlots(allSlots)\r\n            setSelectedTimeSlot(allSlots[0])\r\n            handleSlotChange(allSlots[0])\r\n        }\r\n    },[selectedDay])\r\n    \r\n    return (\r\n        <div className=\"slot-selector\">\r\n            <div className=\"slot-header\">\r\n                <div className=\"slot-switch\">\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" checked={scheduled} onChange={() => setScheduled(!scheduled)} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"slot-schedule\">\r\n                    Schedule Delivery\r\n                </div>\r\n            </div>\r\n            {scheduled && (\r\n            <div className=\"slot-body\">\r\n                <div className=\"slot-time\">\r\n                    <DropdownButton size=\"lg\" key=\"down\" drop=\"down\" title={timeSlots[selectedTimeSlot].slot}>\r\n                        {availableSlots.map((slot) => (\r\n                            <Dropdown.Item \r\n                                key={slot} \r\n                                onClick={() => {\r\n                                    setSelectedTimeSlot(slot)\r\n                                    handleSlotChange(slot)\r\n                                }}>\r\n                                {timeSlots[slot].slot}\r\n                            </Dropdown.Item>\r\n                        ))}\r\n                    </DropdownButton>\r\n                </div>\r\n                <div className=\"slot-day\">\r\n                    <DropdownButton size=\"lg\" key=\"down\" drop=\"down\" title={selectedDay}>\r\n                        {isTodayAvailable && <Dropdown.Item onClick={() => setSelectedDay(\"Today\")} >Today</Dropdown.Item>}\r\n                        <Dropdown.Item onClick={() => {\r\n                            setSelectedDay(\"Tomorrow\")\r\n                            handleDayChange(\"Tomorrow\")\r\n                        }}>Tomorrow</Dropdown.Item>\r\n                    </DropdownButton>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    config: state.config,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Slots)\r\n","module.exports = __webpack_public_path__ + \"static/media/SourceLocation.dd19f806.svg\";","module.exports = __webpack_public_path__ + \"static/media/DestinationLocation.3e877cf9.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter, useHistory } from \"react-router-dom\";\r\nimport MblNavbar from \"../Common/MblNavbar\";\r\nimport * as actionCreators from \"../../Store/actions/index\";\r\nimport { baseUrl } from \"../../config\";\r\nimport {fetchWithTimeout} from '../../api';\r\nimport Slots from '../Slots/Slots';\r\n\r\nfunction CheckoutPackage(props) {\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"1\");\r\n  const [selectedDay, setSelectedDay] = useState(\"Today\");\r\n  const [scheduled,setScheduled] = useState(false)\r\n  const [note, setNote] = useState(\"\");\r\n  const [savedNote, setSavedNote] = useState(\"\");\r\n  const history = useHistory();\r\n  const backUrl = props.location.pathname;\r\n  const isAuth = props.config.isAuth;\r\n  const [show, setShowToast] = useState(false);\r\n  const [showNote, setShowNote] = useState(false);\r\n  const [enablePlaceOrder, setEnablePlaceOrder] = useState(true);\r\n  const [orderPlaced, setOrderPlaced] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const getCharges = async () => {\r\n    const chargesUrl = baseUrl + \"packages/charges\";\r\n    const data = {\r\n        start: {\r\n            lat: props.pickAddress?.lat || \"\",\r\n            lon: props.pickAddress?.lon || \"\"\r\n        },\r\n        end: {\r\n            lat: props.dropAddress?.lat || \"\",\r\n            lon: props.dropAddress?.lon || \"\"\r\n        },\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n        rkey: props.config.authData.rKey,\r\n        dkey: props.config.authData.dKey,\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    const res = await (await fetchWithTimeout(chargesUrl, options)).json();\r\n\r\n    if (res && res.status === 1) {\r\n      setError(res.msg);\r\n      setShowToast(true);\r\n      setOrderPlaced(true);\r\n      props.addNewOrder(res.order);\r\n      setTimeout(() => {\r\n        setShowToast(false);\r\n        props.clearCart();\r\n        setOrderPlaced(false);\r\n        setEnablePlaceOrder(true);\r\n        history.push(\"/\");\r\n      }, 1000);\r\n      return;\r\n    }\r\n    if (res) {\r\n      setError(res.msg);\r\n      setShowToast(true);\r\n      setEnablePlaceOrder(true);\r\n      setTimeout(() => setShowToast(false), 1000);\r\n      return;\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    //   getCharges()\r\n  },[])\r\n  const handlePlaceOrder = () => {\r\n    // if (enablePlaceOrder) {\r\n    //   setEnablePlaceOrder(false);\r\n    //   let checkoutCart = [];\r\n    //   if (!checkoutCart.length > 0) {\r\n    //     setError(\"Your Cart is empty!\");\r\n    //     setShowToast(true);\r\n    //   } else if (Object.keys(props.address.curAddress).length === 0) {\r\n    //     setError(\"Select a delivery address!\");\r\n    //     setShowToast(true);\r\n    //     setTimeout(() => setShowToast(false), 2000);\r\n    //   } else {\r\n    //     // postCheckoutData();\r\n    //   }\r\n    // } else {\r\n    //   setError(\"Processing your order. Please wait...\");\r\n    //   setShowToast(true);\r\n    // }\r\n  };\r\n\r\n  const notifModal = (\r\n    <Toast\r\n      onClose={() => setShowToast(false)}\r\n      show={show}\r\n      delay={2000}\r\n      autohide\r\n      style={{\r\n        position: \"fixed\",\r\n        bottom: \"20vh\",\r\n        zIndex: \"999\",\r\n        textAlign: \"center\",\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\",\r\n      }}\r\n    >\r\n      <Toast.Body\r\n        style={{\r\n          backgroundColor: \"#2f4f4f\",\r\n          color: \"white\",\r\n          borderBottom: \"none\",\r\n          textAlign: \"center\",\r\n          padding: \"0.2rem 0.8rem\",\r\n        }}\r\n      >\r\n        {<strong className=\"mr-auto\">{error}</strong>}\r\n      </Toast.Body>\r\n    </Toast>\r\n  );\r\n  return (\r\n    <div className=\"\">\r\n      <MblNavbar heading=\"Checkout\" back={() => props.hideCheckout} />\r\n      <div className=\"all-product-grid mar-15 container mb-5\">\r\n        {notifModal}\r\n\r\n      {/* Payment Options */}\r\n        <div className=\"pdpt-bg p-4 mb-4\">\r\n          <div className=\"pdpt-title\">\r\n            <h4>Select Payment Option</h4>\r\n          </div>\r\n          <div className=\"rpt100 mt-3\">\r\n            <ul className=\"radio--group-inline-container_1\">\r\n              <li>\r\n                <div className=\"radio-item_1\">\r\n                  <input\r\n                    id=\"pickupCustomer\"\r\n                    value=\"pickupCustomer\"\r\n                    name=\"paymentmethod\"\r\n                    type=\"radio\"\r\n                    // onChange={handlePayment}\r\n                    checked\r\n                    data-minimum=\"50.0\"\r\n                  />\r\n                  <label htmlFor=\"cashondelivery1\" className=\"radio-label_1\">\r\n                    Pick Up\r\n                  </label>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"radio-item_1\">\r\n                  <input\r\n                    id=\"dropCustomer\"\r\n                    value=\"dropCustomer\"\r\n                    name=\"paymentmethod\"\r\n                    type=\"radio\"\r\n                    disabled\r\n                    // onChange={handlePayment}\r\n                    data-minimum=\"50.0\"\r\n                  />\r\n                  <label htmlFor=\"card1\" className=\"radio-label_1\">\r\n                    Drop\r\n                  </label>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n       \r\n      {/* Slots */}\r\n      <Slots \r\n        handleDayChange={(day) => setSelectedDay(day)} \r\n        handleSlotChange={(slot)=> setSelectedTimeSlot(slot)} \r\n        scheduled={scheduled} \r\n        setScheduled={(foo)=>setScheduled(foo)} \r\n      />\r\n\r\n      {/* Note Section */}\r\n      <div\r\n        className=\"d-flex\"\r\n        style={{ justifyContent: \"space-evenly\", paddingBottom: \"10px\" }}\r\n      >\r\n        <div className=\"d-flex\">\r\n          <input\r\n            id=\"note\"\r\n            name=\"note\"\r\n            type=\"text\"\r\n            placeholder=\"Leave a note\"\r\n            value={note}\r\n            onChange={(e) => setNote(e.target.value)}\r\n            autoComplete=\"off\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <button\r\n            onClick={() => {\r\n              setShowNote(true);\r\n              setSavedNote(note);\r\n              setNote(\"\");\r\n            }}\r\n            className=\"w-100 note-btn\"\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {showNote && savedNote.length > 0 && (\r\n        <div\r\n          style={{\r\n            margin: \"15px\",\r\n            backgroundColor: \"#2f4f4f\",\r\n            color: \"white\",\r\n            padding: \"5px 10px\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n          className=\"note\"\r\n        >\r\n          Note: {savedNote}\r\n        </div>\r\n      )}\r\n\r\n      {/* Place Order Btn   */}\r\n        <div className=\"container d-block d-sm-none\">\r\n          <div\r\n            className=\"justify-content-center w-100\"\r\n            style={{ position: \"fixed\", bottom: \"0px\", left: \"0px\" }}\r\n          >\r\n            <Link\r\n              to={\r\n                isAuth\r\n                  ? { pathname: `${props.match.url}` }\r\n                  : { pathname: \"/login\", state: { backUrl } }\r\n              }\r\n              className=\"next-btn16 hover-btn w-100 text-center\"\r\n              style={{ backgroundColor: orderPlaced && \"#5cb85c\" }}\r\n              onClick={handlePlaceOrder}\r\n            >\r\n              {enablePlaceOrder\r\n                ? \"Place Order\"\r\n                : orderPlaced\r\n                ? \"Order Placed\"\r\n                : \"Processing...\"}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    config: state.config,\r\n    address: state.address,\r\n    cart: state.cart,\r\n    restaurant: state.restaurant,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setBackUrl: (payload) => dispatch(actionCreators.setBackUrl(payload)),\r\n    clearCart: () => dispatch(actionCreators.clearCart()),\r\n    addNewOrder: (payload) => dispatch(actionCreators.addNewOrder(payload)),\r\n    setCheckoutData: (payload) =>\r\n      dispatch(actionCreators.setCheckoutData(payload)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(CheckoutPackage));\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../Header/Header\";\r\nimport * as actionCreators from \"../../Store/actions/index\";\r\nimport MblNavbar from \"../Common/MblNavbar\";\r\nimport { Image, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { fetchWithTimeout } from '../../api';\r\nimport pickupImg from \"./SourceLocation.svg\";\r\nimport dropImg from \"./DestinationLocation.svg\";\r\nimport \"./Package.css\";\r\nimport CheckoutPackage from \"./CheckoutPackage\";\r\n\r\nfunction Package(props) {\r\n  const categories = [\r\n    {\r\n      id: 1,\r\n      name: \"Documents\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Food\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Medicine\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Groceries\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Clothes & Accessories\"\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Electronic Goods\"\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Stationary Items\"\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Other Items\"\r\n    },\r\n  ]\r\n  const baseUrl = props.config.baseUrl;\r\n  const [selectedCategory,setSelectedCategory] = useState(\"\")\r\n  const [isOneWay,setIsOneWay] = useState(true)\r\n  const [showCheckout,setShowCheckout] = useState(false)\r\n  const history = useHistory();\r\n  const pickAddress = props.package.pickUpAddress\r\n  const dropAddress = props.package.dropAddress\r\n\r\n  const handleShowCheckout = () => {\r\n    setShowCheckout(true)\r\n  }\r\n  const PackageHome = () => (\r\n    <>\r\n      <div className=\"send-package-main p-3\">\r\n        <div className=\"pickup-package\">\r\n            <Image src={pickupImg} className=\"pickup-img\" fluid />\r\n            <div className=\"pickup-location\">\r\n                <p>Pickup Location</p>\r\n                {pickAddress ? \r\n                (<div className=\"address-item\">\r\n                      <div className=\"address-dt-all\">\r\n                        {pickAddress.area}\r\n                        <ul className=\"action-btns\">\r\n                        <li>\r\n                          <div\r\n                            className=\"action-btn\"\r\n                            onClick={() => {\r\n                              history.push(\"/pickaddress\")\r\n                            }}\r\n                          >\r\n                            <i className=\"uil uil-edit\"></i>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div className=\"action-btn\" onClick={()=> {\r\n                            props.deletePickupAddress()\r\n                          }}>\r\n                            <i className=\"uil uil-trash-alt\"></i>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                      </div>\r\n                    </div>\r\n                  ) :\r\n                (\r\n                <span className=\"add-location\" onClick={()=>history.push(\"/pickaddress\")}>\r\n                    <i className=\"fas fa-plus\" />\r\n                </span>\r\n                )}\r\n            </div> \r\n        </div>\r\n        <div className=\"drop-package\">\r\n            <div className=\"drop-location\">\r\n                <p>Drop Location</p>\r\n                {dropAddress ? \r\n                (<div className=\"\">\r\n                      <div className=\"\">\r\n                        {dropAddress.area}\r\n                        <ul className=\"action-btns\">\r\n                        <li>\r\n                          <div\r\n                            className=\"action-btn\"\r\n                            onClick={() => {\r\n                              history.push(\"/dropaddress\")\r\n                            }}\r\n                          >\r\n                            <i className=\"uil uil-edit\"></i>\r\n                          </div>\r\n                        </li>\r\n                        <li>\r\n                          <div className=\"action-btn\" onClick={()=> {\r\n                            props.deleteDropAddress()\r\n                          }}>\r\n                            <i className=\"uil uil-trash-alt\"></i>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                      </div>\r\n                    </div>\r\n                  ) :\r\n                (\r\n                <span className=\"add-location\" onClick={()=>history.push(\"/dropaddress\")}>\r\n                    <i className=\"fas fa-plus\" />\r\n                </span>\r\n                )}\r\n            </div> \r\n            <Image src={dropImg} className=\"drop-img\" fluid />\r\n        </div>\r\n        <div className=\"pickup-categories\">\r\n            <DropdownButton size=\"lg\" key=\"down\" drop=\"down\" title={selectedCategory || \"Select Package type\"}>\r\n                {categories.map((category,index)=>(\r\n                  <Dropdown.Item key={index} eventKey={index} onClick={() => setSelectedCategory(category.name)}>\r\n                      {category.name}\r\n                  </Dropdown.Item>\r\n                ))}        \r\n            </DropdownButton>\r\n        </div>\r\n        <div className=\"pickup-options\">\r\n            <div className=\"one-way\">\r\n                <div className=\"switch-btn\">\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" checked={isOneWay} onChange={()=>setIsOneWay(!isOneWay)} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"one-way-text\">\r\n                    One - way\r\n                </div>\r\n            </div>\r\n            <div className=\"round-trip\">\r\n               <div className=\"switch-btn\">\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" checked={!isOneWay} onChange={()=>setIsOneWay(!isOneWay)} />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"round-trip-text\">\r\n                    Round - trip \r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"package-next-btn\" onClick={handleShowCheckout}>\r\n        Next\r\n      </div>\r\n    </>\r\n  )\r\n\r\n  return  (\r\n  <>\r\n      <div className=\"d-none d-sm-block\">\r\n        <Header />\r\n      </div>\r\n      <div className=\"d-block d-sm-none\">\r\n        <MblNavbar\r\n          heading=\"Packages\"\r\n          back={()=>history.goBack()}\r\n        />\r\n      </div>\r\n      {showCheckout ? <CheckoutPackage hideCheckout={() => setShowCheckout(false)} pickAddress={pickAddress} dropAddress={dropAddress} /> : <PackageHome />}\r\n  </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    config: state.config,\r\n    package: state.package\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deletePickupAddress: (payload) =>\r\n      dispatch(actionCreators.deletePickupAddress(payload)),\r\n    deleteDropAddress: (payload) =>\r\n      dispatch(actionCreators.deleteDropAddress(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Package);\r\n"],"sourceRoot":""}