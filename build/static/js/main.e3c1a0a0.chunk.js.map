{"version":3,"sources":["Store/actions/cart.js","Store/actions/config.js","Store/actions/product.js","Store/actions/restaurant.js","Store/actions/address.js","Store/actions/orders.js","Store/actions/notifications.js","Store/actions/package.js","Components/Common/Rating.js","App.js","serviceWorker.js","index.js","config.js","api.js","Store/actions/actionTypes.js","Store/reducers/configReducer.js","Store/reducers/cartReducer.js","Store/reducers/productReducer.js","Store/reducers/restaurantReducer.js","Store/reducers/addressReducer.js","Store/reducers/ordersReducer.js","Store/reducers/packageReducer.js","Store/reducers/notificationsReducer.js","Store/configStore.js","Store/localStorage.js"],"names":["addToCart","payload","type","actionTypes","setQuantity","clearAndAdd","clearCart","setCheckoutData","deleteCartItem","pid","getDerivedPrice","setLocation","setNotification","setCurService","setBackUrl","updateConfigData","updateSettings","clearNotification","authenticate","logout","loadData","dispatch","axios","get","then","data","setData","setCurProduct","updateRestaurants","setCurRestaurant","setLoadedRestaurants","setReloadRestaurants","addNewAddress","setCurAddress","clearAddress","setAddressList","setActiveOrders","setOrderStatus","addNewOrder","clearOrders","setLoadedNotifications","setPickupAddress","setDropAddress","deletePickupAddress","deleteDropAddress","RatingWidget","order","setRating","onClose","useState","stars","rating","hovered","selectedIcon","deselectedIcon","state","setState","style","backgroundColor","width","padding","margin","position","bottom","zIndex","borderRadius","textAlign","className","fontSize","color","marginRight","marginBottom","merchant","xmlns","fill","height","viewBox","aria-labelledby","role","class","onClick","id","x1","x2","y1","y2","offset","stop-color","d","map","star","key","cursor","newRating","SignUp","lazy","Home","ProductList","More","Dashboard","Checkout","RListNew","Settings","Notifications","AddAddressFromMap","ConfigureAddress","Package","AddAnyAddress","connect","config","orders","actionCreators","props","showToast","setShowToast","error","setError","disconnected","setDisconnected","ratings","length","showRating","setShowRating","saveRating","rat","a","ratingUrl","baseUrl","order_id","ordid","options","method","headers","rKey","authData","dKey","ftoken","localStorage","getItem","body","JSON","stringify","fetchWithTimeout","json","res","msg","useEffect","console","log","navigator","onLine","loadConfigData","apiUrl","address","usrid","user","userid","isAuth","subscribeToSockets","errorToast","Toast","show","delay","autohide","left","transform","Body","borderBottom","overflowX","fallback","exact","path","component","render","addressSource","Boolean","window","location","hostname","match","ReactDOM","StrictMode","store","Store","document","getElementById","serviceWorker","ready","registration","unregister","catch","message","isProd","host","streamUrl","imgUrl","GoogleMapsAPI","socket","openSocket","transports","userID","on","emit","ordersData","unsubscribeToSockets","uri","time","controller","AbortController","signal","setTimeout","abort","fetch","response","ok","Error","status","statusText","name","SET_LOCATION","SET_NOTIFICATION","CLEAR_NOTIFICATION","AUTHENTICATE","LOGOUT","UPDATE_CONFIG_DATA","SET_BACK_URL","UPDATE_SETTINGS","SET_CUR_SERVICE","SET_QUANTITY","ADD_TO_CART","DELETE_CART_ITEM","SET_CHECKOUT_DATA","CLEAR_AND_ADD","CLEAR_CART","LOAD_DATA","UPDATE_PRODUCTS","SET_CUR_PRODUCT","SET_CUR_RESTAURANT","UPDATE_RESTAURANTS","SET_LOADED_RESTAURANTS","SET_RELOAD_RESTAURANTS","SET_CUR_ADDRESS","CLEAR_ADDRESS","SET_DEFAULT_ADDRESS","ADD_NEW_ADDRESS","SET_ADDRESS_LIST","ADD_NEW_ORDER","CLEAR_ORDERS","SET_ALL_ORDERS","SET_ORDER_STATUS","SET_ACTIVE_ORDERS","SET_LOADED_NOTIFICATIONS","SET_RELOAD_NOTIFICATIONS","SET_PICKUP_ADDRESS","SET_DROP_ADDRESS","DELETE_PICKUP_ADDRESS","DELETE_DROP_ADDRESS","configReducer","curLocation","mbl","phone","backUrl","loadedData","curBranch","bid","services","curService","pic","notification","showNotification","rcats","branches","faqs","slots","action","clear","selectedBranch","find","x","faq","auth","cartReducer","cartItems","checkoutData","totalPrice","subTotal","deliveryCharge","savings","existingCartItem","item","quantity","emptyCrt","push","newCartItems","filter","amountA","amountS","parseInt","itemPrice","extraPrice","sprice","delivery","added_item","existed_item","productReducer","curProduct","items","restaurantReducer","curRestaurant","refreshRestaurants","shops","addressReducer","curAddress","defaultAddress","addressList","allowedStatus","ordersReducer","activeOrders","allOrders","orderStatus","statuses","includes","ost","elementsIndex","findIndex","element","newActiveOrders","packageReducer","pickUpAddress","dropAddress","notificationsReducer","notificationsList","refreshNotifications","persistedState","serializedState","parse","err","loadState","rootReducer","combineReducers","cart","product","restaurant","notifications","package","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","_","throttle","setItem","saveState","getState"],"mappings":"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","file":"static/js/main.e3c1a0a0.chunk.js","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const addToCart = (payload) => {\r\n  return {\r\n    type: actionTypes.ADD_TO_CART,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setQuantity = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_QUANTITY,\r\n    payload: payload,\r\n  };\r\n};\r\nexport const clearAndAdd = (payload) => {\r\n  return {\r\n    type: actionTypes.CLEAR_AND_ADD,\r\n    payload: payload,\r\n  };\r\n};\r\nexport const clearCart = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_CART,\r\n  };\r\n};\r\nexport const setCheckoutData = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_CHECKOUT_DATA,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const deleteCartItem = (pid) => {\r\n  return {\r\n    type: actionTypes.DELETE_CART_ITEM,\r\n    payload: pid,\r\n  };\r\n};\r\n\r\nexport const getDerivedPrice = (pid) => {\r\n  return {\r\n    type: actionTypes,\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nexport const setLocation = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_LOCATION,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setNotification = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_NOTIFICATION,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setCurService = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_CUR_SERVICE,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setBackUrl = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_BACK_URL,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const updateConfigData = (payload) => {\r\n  return {\r\n    type: actionTypes.UPDATE_CONFIG_DATA,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const updateSettings = (payload) => {\r\n  return {\r\n    type: actionTypes.UPDATE_SETTINGS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const clearNotification = (payload) => {\r\n  return {\r\n    type: actionTypes.CLEAR_NOTIFICATION,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const authenticate = (payload) => {\r\n  return {\r\n    type: actionTypes.AUTHENTICATE,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: actionTypes.LOGOUT,\r\n  };\r\n};\r\n\r\nexport function loadData() {\r\n  return function (dispatch) {\r\n    return axios.get(\"http://localhost:8000/\").then(({ data }) => {\r\n      dispatch(setData(data));\r\n    });\r\n  };\r\n}\r\nexport const setData = (data) => {\r\n  return {\r\n    type: actionTypes.LOAD_DATA,\r\n    payload: data,\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const updateProducts = (payload) => {\r\n  return {\r\n    type: actionTypes.UPDATE_PRODUCTS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setCurProduct = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_CUR_PRODUCT,\r\n    payload: payload,\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const updateRestaurants = (payload) => {\r\n  return {\r\n    type: actionTypes.UPDATE_RESTAURANTS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setCurRestaurant = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_CUR_RESTAURANT,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setLoadedRestaurants = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_LOADED_RESTAURANTS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setReloadRestaurants = () => {\r\n  return {\r\n    type: actionTypes.SET_RELOAD_RESTAURANTS,\r\n  };\r\n};","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const addNewAddress = (payload) => {\r\n  return {\r\n    type: actionTypes.ADD_NEW_ADDRESS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setCurAddress = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_CUR_ADDRESS,\r\n    payload: payload,\r\n  };\r\n};\r\nexport const clearAddress = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_ADDRESS\r\n  };\r\n};\r\nexport const setDefaultAddress = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_DEFAULT_ADDRESS,\r\n    payload: payload,\r\n  };\r\n};\r\nexport const setAddressList = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_ADDRESS_LIST,\r\n    payload: payload,\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setActiveOrders = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_ACTIVE_ORDERS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setAllOrders = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_ALL_ORDERS,\r\n    payload: payload,\r\n  };\r\n};\r\nexport const setOrderStatus = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_ORDER_STATUS,\r\n    payload: payload,\r\n  };\r\n};\r\nexport const addNewOrder = (payload) => {\r\n  return {\r\n    type: actionTypes.ADD_NEW_ORDER,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const clearOrders = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_ORDERS,\r\n  };\r\n};","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setLoadedNotifications = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_LOADED_NOTIFICATIONS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setReloadNotifications = () => {\r\n  return {\r\n    type: actionTypes.SET_RELOAD_NOTIFICATIONS,\r\n  };\r\n};","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setPickupAddress = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_PICKUP_ADDRESS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const setDropAddress = (payload) => {\r\n  return {\r\n    type: actionTypes.SET_DROP_ADDRESS,\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const deletePickupAddress = () => {\r\n  return {\r\n    type: actionTypes.DELETE_PICKUP_ADDRESS,\r\n  };\r\n};\r\n\r\nexport const deleteDropAddress = () => {\r\n  return {\r\n    type: actionTypes.DELETE_DROP_ADDRESS,\r\n  };\r\n};","import React, { useState } from \"react\";\r\nimport \"./Rating.css\";\r\n\r\nfunction RatingWidget({ order={}, setRating, onClose }) {\r\n  const [state, setState] = useState({\r\n    stars: [1, 2, 3, 4, 5],\r\n    rating: 0,\r\n    hovered: 0,\r\n    selectedIcon: \"★\",\r\n    deselectedIcon: \"☆\",\r\n  });\r\n  const changeRating = (newRating) => {\r\n    setState({\r\n      ...state,\r\n      rating: newRating,\r\n    });\r\n    setRating(newRating);\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#2f4f4f\",\r\n        width: \"auto\",\r\n        padding: \"10px 20px\",\r\n        margin: \"20px\",\r\n        position: \"absolute\",\r\n        bottom: \"20%\",\r\n        zIndex:\"9999\",\r\n        borderRadius: \"10px\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n        <div\r\n          className=\"rating\"\r\n          style={{\r\n            fontSize: \"4em\",\r\n            color: \"#38d39f\",\r\n          }}\r\n        >\r\n          <p style={{fontSize:\"16px\",marginRight:\"8%\", marginBottom:\"0px\"}} className=\"rating-header\">Rate your experience with {order?.merchant}</p>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"#38d39f\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 20 20\"\r\n            aria-labelledby=\"icon-svg-title- icon-svg-desc-\"\r\n            role=\"img\"\r\n            class=\"rbbb40-0 byLLrW\"\r\n            onClick={onClose}\r\n          >\r\n            <linearGradient\r\n              id=\"ckfjyi5d901ik3r6vttkuprlt\"\r\n              x1=\"0\"\r\n              x2=\"100%\"\r\n              y1=\"0\"\r\n              y2=\"0\"\r\n            >\r\n              <stop offset=\"0\" stop-color=\"#38d39f\"></stop>\r\n              <stop offset=\"100%\" stop-color=\"#38d39f\"></stop>\r\n            </linearGradient>\r\n            <title id=\"icon-svg-title-\"></title>\r\n            <desc id=\"icon-svg-desc-\">It is an icon with title </desc>\r\n            <title>cross</title>\r\n            <path\r\n              d=\"M11.42 10.42l3.54-3.54c0.38-0.4 0.38-1.040 0-1.42s-1.020-0.4-1.42 0l-3.54 3.54-3.54-3.54c-0.4-0.4-1.020-0.4-1.42 0s-0.38 1.020 0 1.42l3.54 3.54-3.54 3.54c-0.38 0.38-0.38 1.020 0 1.42 0.2 0.18 0.46 0.28 0.72 0.28s0.5-0.1 0.7-0.28l3.54-3.56 3.54 3.56c0.2 0.18 0.46 0.28 0.72 0.28s0.5-0.1 0.7-0.28c0.38-0.4 0.38-1.040 0-1.42l-3.54-3.54z\"\r\n              fill=\"url(#ckfjyi5d901ik3r6vttkuprlt)\"\r\n            ></path>\r\n          </svg>\r\n\r\n          {state.stars.map((star) => {\r\n            return (\r\n              <span\r\n                key={star}\r\n                style={{ \r\n                  cursor: \"pointer\",\r\n                  padding: \"0px 5px\"\r\n                }}\r\n                className=\"rating-icon\"\r\n                onClick={() => {\r\n                  changeRating(star);\r\n                }}\r\n              >\r\n                {state.rating < star\r\n                  ? state.hovered < star\r\n                    ? state.deselectedIcon\r\n                    : state.selectedIcon\r\n                  : state.selectedIcon}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RatingWidget;\r\n","import React, { useState, useEffect, Suspense, lazy } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport { subscribeToSockets, fetchWithTimeout } from \"./api\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport * as actionCreators from \"./Store/actions/index\";\r\nimport { baseUrl } from \"./config\";\r\nimport Rating from \"./Components/Common/Rating\";\r\n\r\n//lazy routes\r\nconst SignUp = lazy(() => import('./Containers/SignUp'));\r\nconst Home = lazy(() => import('./Containers/Home'));\r\nconst ProductList = lazy(() => import('./Components/Products/ProductList'));\r\nconst More = lazy(() => import('./Components/More/Morev2'));\r\nconst Dashboard = lazy(() => import('./Containers/Dashboard'));\r\nconst Checkout = lazy(() => import('./Components/Checkout/Checkout'));\r\nconst RListNew = lazy(() => import('./Components/Restaurants/RListNew'));\r\nconst Settings = lazy(() => import('./Components/Settings/Settings'));\r\nconst Notifications = lazy(() => import('./Components/Notifications/Notifications'));\r\nconst AddAddressFromMap = lazy(() => import('./Components/Maps/AddAddressFromMap'));\r\nconst ConfigureAddress = lazy(() => import('./Components/Dashboard/Address'));\r\nconst Package = lazy(() => import('./Components/Packages/Package'));\r\nconst AddAnyAddress = lazy(() => import('./Components/Packages/AddAnyAddress'));\r\n\r\nfunction App(props) {\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [disconnected, setDisconnected] = useState(false);\r\n  const [rating,setRating] = useState(0);\r\n  const [showRating, setShowRating] = useState(props.orders.ratings?.length > 0 || false);\r\n\r\n  const reload = () => {\r\n    if (navigator.onLine) {\r\n      loadConfigData();\r\n    } else {\r\n      setDisconnected(true);\r\n    }\r\n  };\r\n\r\n  const saveRating = async (rat) => {\r\n    const ratingUrl = baseUrl + \"order/rate\";\r\n    setRating(rat)\r\n    setShowRating(false)\r\n    const data={\r\n      rating: rat,\r\n      order_id: props.orders.ratings[0].ordid\r\n    }\r\n    //save data to api\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n        rKey: props.config.authData.rKey || \"\",\r\n        dKey: props.config.authData.dKey || \"\",\r\n        ftoken: localStorage.getItem(\"ftoken\") || \"\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    const res = await (await fetchWithTimeout(ratingUrl, options, 3000)).json();\r\n    if (res) {\r\n      setError(res.msg)\r\n      setShowToast(true)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    console.log(navigator.onLine);\r\n    reload();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const apiUrl = baseUrl + \"configs\";\r\n  const loadConfigData = async () => {\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n        rKey: props.config.authData.rKey || \"\",\r\n        dKey: props.config.authData.dKey || \"\",\r\n        ftoken: localStorage.getItem(\"ftoken\") || \"\",\r\n      },\r\n    };\r\n\r\n    const res = await (await fetchWithTimeout(apiUrl, options, 3000)).json();\r\n    if (res) {\r\n      props.updateConfigData(res);\r\n      props.setActiveOrders(res);\r\n      props.setAddressList(res.address);\r\n      const usrid = res.user && res.user.length > 0 ? res.user[0].userid : \"\";\r\n      if (props.config.isAuth) {\r\n        subscribeToSockets(usrid);\r\n      }\r\n    }\r\n  };\r\n\r\n  const errorToast = (\r\n    <Toast\r\n      onClose={() => setShowToast(false)}\r\n      show={showToast}\r\n      delay={2000}\r\n      autohide\r\n      style={{\r\n        position: \"fixed\",\r\n        bottom: \"20vh\",\r\n        zIndex: \"999\",\r\n        textAlign: \"center\",\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\",\r\n      }}\r\n    >\r\n      <Toast.Body\r\n        style={{\r\n          backgroundColor: \"#2f4f4f\",\r\n          color: \"white\",\r\n          borderBottom: \"none\",\r\n          textAlign: \"center\",\r\n          padding: \"0.2rem 0.8rem\",\r\n        }}\r\n      >\r\n        {<strong className=\"mr-auto\">{error}</strong>}\r\n      </Toast.Body>\r\n    </Toast>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {showRating && (\r\n        <div className=\"rating-box\">\r\n          <Rating order={props.orders.ratings[0]} setRating={(rat)=>saveRating(rat)} onClose = {()=> saveRating(false)} />\r\n        </div>\r\n      )}\r\n      {errorToast}\r\n      {!disconnected && (\r\n        <div className=\"\" style={{ overflowX: \"hidden\" }}>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Switch>\r\n              <Route exact path=\"/login\" component={SignUp} />\r\n              {/* <Route exact path=\"/welcome\" component={Welcome} /> */}\r\n              <Route exact path=\"/notifications\" component={Notifications} />\r\n              <Route exact path=\"/addaddress\" component={AddAddressFromMap} />\r\n              <Route exact path=\"/pickaddress\" render={()=><AddAnyAddress addressSource=\"pickup\" />} />\r\n              <Route exact path=\"/dropaddress\" render={()=><AddAnyAddress addressSource=\"drop\" />} />\r\n              <Route\r\n                exact\r\n                path=\"/configure-address\"\r\n                component={ConfigureAddress}\r\n              />\r\n              <Route exact path=\"/settings\" component={Settings} />\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/register\" component={SignUp} />\r\n              <Route exact path=\"/more\" component={More} />\r\n              <Route path=\"/dashboard\" component={Dashboard} />\r\n              <Route path=\"/checkout\" component={Checkout} />\r\n              <Route exact path=\"/:location\" component={Home} />\r\n              <Route exact path=\"/:location/packages\" component={Package} />\r\n              <Route exact path=\"/:location/:service\" component={RListNew} />\r\n              <Route\r\n                exact\r\n                path=\"/:location/:service/:restaurant\"\r\n                component={ProductList}\r\n              />\r\n            </Switch>\r\n          </Suspense>\r\n           </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    config: state.config,\r\n    orders: state.orders\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateConfigData: (payload) =>\r\n      dispatch(actionCreators.updateConfigData(payload)),\r\n    setActiveOrders: (payload) =>\r\n      dispatch(actionCreators.setActiveOrders(payload)),\r\n    setAddressList: (payload) =>\r\n      dispatch(actionCreators.setAddressList(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Store from \"./Store/configStore\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={Store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","const isProd = window.location.host === \"m.rightdelivers.in\" ? true : false;\r\nconst prodUrl = \"https://api.rightdelivers.in/user/api/v1/\";\r\nconst devUrl = \"https://testapi.rightdelivers.in/user/api/v1/\";\r\nconst devStream = \"https://teststream.rightdelivers.in\";\r\nconst prodStream = \"https://stream.rightdelivers.in\";\r\n\r\nexport const streamUrl = isProd ? prodStream : devStream;\r\nexport const baseUrl = isProd ? prodUrl : devUrl;\r\nexport const imgUrl = \"https://rightdelivers.in/uploads/\";\r\nexport const GoogleMapsAPI = \"AIzaSyCDKBu1aPoiFQX0tCZUJJ2I8_JRW7f_vmU\";\r\n","import openSocket from \"socket.io-client\";\r\nimport * as actionCreators from \"./Store/actions/index\";\r\nimport Store from \"./Store/configStore\";\r\nimport {streamUrl} from \"./config\"\r\n\r\nconst socket = openSocket(streamUrl, {\r\n  path: \"/socket.io\",\r\n  transports: [\"websocket\"],\r\n});\r\n\r\n\r\nfunction subscribeToSockets(userID) {\r\n  console.log(\"subscribed\")\r\n  //const state = Store.getState();\r\n  socket.connect();\r\n  \r\n  //Establish connection\r\n  socket.on(\"connect\");\r\n\r\n  //Subscribe to sockets with token\r\n  socket.emit(\"subscribe\",userID);\r\n  //Get Messages from sockets\r\n  socket.on(\"message\", (message) => {\r\n  });\r\n\r\n  //Get Order Status from sockets\r\n  socket.on(\"orderstatus\",(ordersData) => {\r\n    Store.dispatch(actionCreators.setOrderStatus(ordersData));\r\n  });\r\n\r\n  socket.on(\"refreshRestaurants\",()=>{\r\n    Store.dispatch(actionCreators.setReloadRestaurants());\r\n  })\r\n  //Get Toast Messages\r\n  socket.on(\"toast\", function (message) {\r\n    return\r\n  });\r\n}\r\n\r\nfunction unsubscribeToSockets(userID){\r\n  console.log(\"Unsubscribed\")\r\n  socket.emit(\"unsubscribe\",userID)\r\n}\r\n\r\n//fetch api with timeout\r\n\r\nconst fetchWithTimeout = (uri, options = {}, time = 5000) => {\r\n  // Lets set up our `AbortController`, and create a request options object\r\n  // that includes the controller's `signal` to pass to `fetch`.\r\n  const controller = new AbortController()\r\n  const config = { ...options, signal: controller.signal }\r\n  // Set a timeout limit for the request using `setTimeout`. If the body\r\n  // of this timeout is reached before the request is completed, it will\r\n  // be cancelled.\r\n  const timeout = setTimeout(() => {\r\n    controller.abort()\r\n  }, time)\r\n  return fetch(uri, config)\r\n    .then((response) => {\r\n      // Because _any_ response is considered a success to `fetch`, we\r\n      // need to manually check that the response is in the 200 range.\r\n      // This is typically how I handle that.\r\n      if (!response.ok) {\r\n        throw new Error(`${response.status}: ${response.statusText}`)\r\n      }\r\n      return response\r\n    })\r\n    .catch((error) => {\r\n      // When we abort our `fetch`, the controller conveniently throws\r\n      // a named error, allowing us to handle them separately from\r\n      // other errors.\r\n      if (error.name === 'AbortError') {\r\n        throw new Error('Response timed out')\r\n      }\r\n      throw new Error(error.message)\r\n    })\r\n}\r\nexport { subscribeToSockets, unsubscribeToSockets, fetchWithTimeout };\r\n","//config\r\nexport const SET_LOCATION = \"SET_LOCATION\";\r\nexport const SET_NOTIFICATION = \"SET_NOTIFICATION\";\r\nexport const CLEAR_NOTIFICATION = \"CLEAR_NOTIFICATION\";\r\nexport const AUTHENTICATE = \"AUTHENTICATE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const UPDATE_CONFIG_DATA = \"UPDATE_CONFIG_DATA\";\r\nexport const SET_BACK_URL = \"SET_BACK_URL\";\r\nexport const UPDATE_SETTINGS = \"UPDATE_SETTINGS\";\r\nexport const SET_CUR_SERVICE = \"SET_CUR_SERVICE\";\r\n\r\n//cart\r\nexport const SET_QUANTITY = \"SET_QUANTITY\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const DELETE_CART_ITEM = \"DELETE_CART_ITEM\";\r\nexport const SET_CHECKOUT_DATA = \"SET_CHECKOUT_DATA\";\r\nexport const CLEAR_AND_ADD = \"CLEAR_AND_ADD\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n\r\n//test\r\nexport const LOAD_DATA = \"LOAD_DATA\";\r\n\r\n//product\r\nexport const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\nexport const SET_CUR_PRODUCT = \"SET_CUR_PRODUCT\";\r\n\r\n//restaurant\r\nexport const SET_CUR_RESTAURANT = \"SET_CUR_RESTAURANT\";\r\nexport const UPDATE_RESTAURANTS = \"UPDATE_RESTAURANTS\";\r\nexport const SET_LOADED_RESTAURANTS = \"SET_LOADED_RESTAURANTS\";\r\nexport const SET_RELOAD_RESTAURANTS = \"SET_RELOAD_RESTAURANTS\";\r\n\r\n//address\r\nexport const SET_CUR_ADDRESS = \"SET_CUR_ADDRESS\";\r\nexport const CLEAR_ADDRESS = \"CLEAR_ADDRESS\";\r\nexport const SET_DEFAULT_ADDRESS = \"SET_DEFAULT_ADDRESS\";\r\nexport const ADD_NEW_ADDRESS = \"ADD_NEW_ADDRESS\";\r\nexport const SET_ADDRESS_LIST = \"SET_ADDRESS_LIST\";\r\n\r\n//orders\r\nexport const ADD_NEW_ORDER = \"ADD_NEW_ORDER\";\r\nexport const CLEAR_ORDERS = \"CLEAR_ORDERS\";\r\nexport const SET_ALL_ORDERS = \"SET_ALL_ORDERS\";\r\nexport const SET_ORDER_STATUS = \"SET_ORDER_STATUS\";\r\nexport const SET_ACTIVE_ORDERS = \"SET_ACTIVE_ORDERS\";\r\n\r\n//notifications\r\nexport const SET_LOADED_NOTIFICATIONS = \"SET_LOADED_NOTIFICATIONS\";\r\nexport const SET_RELOAD_NOTIFICATIONS = \"SET_RELOAD_NOTIFICATIONS\";\r\n\r\n//Package\r\nexport const SET_PICKUP_ADDRESS = \"SET_PICKUP_ADDRESS\";\r\nexport const SET_DROP_ADDRESS = \"SET_DROP_ADDRESS\";\r\nexport const DELETE_PICKUP_ADDRESS = \"DELETE_PICKUP_ADDRESS\";\r\nexport const DELETE_DROP_ADDRESS = \"DELETE_DROP_ADDRESS\";","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { baseUrl } from \"../../config\";\r\nimport { unsubscribeToSockets } from \"../../api\";\r\n\r\nconst configReducer = function (\r\n  state = {\r\n    curLocation: \"\",\r\n    isAuth: false,\r\n    authData: {\r\n      user: { name: \"\", mbl: \"\", userid: 0 },\r\n      phone: \"\",\r\n      rKey: \"\",\r\n      dKey: \"\",\r\n    },\r\n    backUrl: \"/\",\r\n    baseUrl: baseUrl,\r\n    loadedData: {},\r\n    curBranch: { bid: \"\", services: [] },\r\n    curService: { name: \"\", pic: \"\" },\r\n    notification: \"\",\r\n    showNotification: false,\r\n    rcats: [],\r\n    services: {},\r\n    branches: [],\r\n    faqs: [],\r\n    slots: {}\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_DATA:\r\n      return {\r\n        ...state,\r\n        loadedData: action.payload,\r\n      };\r\n    case actionTypes.AUTHENTICATE:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        authData: action.payload,\r\n      };\r\n    case actionTypes.LOGOUT:\r\n      unsubscribeToSockets(state.authData.user.userid);\r\n      localStorage.clear();\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        authData: {},\r\n        curLocation: \"\",\r\n        backUrl: \"/\",\r\n      };\r\n    case actionTypes.SET_BACK_URL:\r\n      return {\r\n        ...state,\r\n        backUrl: action.payload,\r\n      };\r\n    case actionTypes.UPDATE_SETTINGS:\r\n      return {\r\n        ...state,\r\n        authData: {\r\n          ...state.authData,\r\n          user: {\r\n            ...state.authData.user,\r\n            name: action.payload.name,\r\n          },\r\n        },\r\n      };\r\n    case actionTypes.UPDATE_CONFIG_DATA:\r\n      const selectedBranch = action.payload.branches.find(\r\n        (x) => x.bid === (state.curBranch ? state.curBranch.bid : \"\")\r\n      );\r\n      return {\r\n        ...state,\r\n        branches: action.payload.branches,\r\n        rcats: action.payload.rcats,\r\n        services: action.payload.services,\r\n        curBranch: selectedBranch,\r\n        faqs: action.payload.faq,\r\n        isAuth: action.payload.auth === 1 ? true : false,\r\n        authData: {\r\n          ...state.authData,\r\n          user: action.payload.user\r\n            ? {\r\n                ...state.authData.user,\r\n                ...action.payload.user[0],\r\n              }\r\n            : state.authData.user,\r\n        },\r\n        slots: action.payload.slots\r\n      };\r\n    case actionTypes.SET_LOCATION:\r\n      return {\r\n        ...state,\r\n        curBranch: action.payload,\r\n        showNotification: false,\r\n        notification: \"\",\r\n        curLocation: action.payload.name,\r\n      };\r\n    case actionTypes.SET_CUR_SERVICE:\r\n      return {\r\n        ...state,\r\n        curService: action.payload,\r\n      };\r\n    case actionTypes.SET_NOTIFICATION:\r\n      return { ...state, notification: action.payload, showNotification: true };\r\n\r\n    case actionTypes.CLEAR_NOTIFICATION:\r\n      return { ...state, notification: \"\", showNotification: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default configReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst cartReducer = function (\r\n  state = {\r\n    cartItems: [],\r\n    checkoutData: {\r\n      totalPrice: 0,\r\n      subTotal: 0,\r\n      deliveryCharge: 0,\r\n      savings: 0,\r\n    },\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.SET_QUANTITY: {\r\n      const existingCartItem = state.cartItems.find(\r\n        (item) => item.pid === action.payload.pid\r\n      );\r\n      existingCartItem.quantity = action.payload.quantity;\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case actionTypes.SET_CHECKOUT_DATA: {\r\n      return {\r\n        ...state,\r\n        checkoutData: action.payload,\r\n      };\r\n    }\r\n    case actionTypes.CLEAR_AND_ADD: {\r\n      let emptyCrt = [];\r\n      emptyCrt.push(action.payload);\r\n      return {\r\n        ...state,\r\n        cartItems: emptyCrt,\r\n      };\r\n    }\r\n    case actionTypes.CLEAR_CART: {\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n        checkoutData: {\r\n          totalPrice: 0,\r\n          subTotal: 0,\r\n          deliveryCharge: 0,\r\n          savings: 0,\r\n        },\r\n      };\r\n    }\r\n\r\n    case actionTypes.DELETE_CART_ITEM: {\r\n      const newCartItems = state.cartItems.filter(\r\n        (item) => item.pid !== action.payload\r\n      );\r\n      let amountA = 0;\r\n      let amountS = 0;\r\n      newCartItems.map((item) => {\r\n        amountA +=\r\n          (parseInt(item.itemPrice) + parseInt(item.extraPrice)) *\r\n          item.quantity;\r\n        amountS += item.sprice * item.quantity;\r\n        return amountA;\r\n      });\r\n      const payload = {\r\n        ...state.checkoutData,\r\n        subTotal: amountA,\r\n        savings: amountS - amountA,\r\n        totalPrice: amountA + parseInt(state.checkoutData.delivery),\r\n      };\r\n      return {\r\n        ...state,\r\n        cartItems: newCartItems,\r\n        checkoutData: payload,\r\n      };\r\n    }\r\n    case actionTypes.ADD_TO_CART:\r\n      let added_item = state.cartItems.find(\r\n        (item) => item.pid === action.payload.pid\r\n      );\r\n      let existed_item = state.cartItems.find(\r\n        (item) => action.payload.pid === item.pid\r\n      );\r\n      if (existed_item) {\r\n        added_item.quantity += action.payload.quantity;\r\n        return {\r\n          ...state,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, action.payload],\r\n        };\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default cartReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst productReducer = function (\r\n  state = {\r\n    curProduct: {},\r\n    items: [],\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        items: action.payload.items,\r\n      };\r\n    case actionTypes.SET_CUR_PRODUCT:\r\n      return {\r\n        ...state,\r\n        curProduct: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default productReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst restaurantReducer = function (\r\n  state = {\r\n    curRestaurant: {},\r\n    items: [],\r\n    refreshRestaurants:true\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.UPDATE_RESTAURANTS:\r\n      return {\r\n        ...state,\r\n        items: action.payload.shops,\r\n      };\r\n    case actionTypes.SET_CUR_RESTAURANT:\r\n      return {\r\n        ...state,\r\n        curRestaurant: action.payload,\r\n      };\r\n    case actionTypes.SET_RELOAD_RESTAURANTS:\r\n      return {\r\n        ...state,\r\n        refreshRestaurants:true\r\n      };\r\n    case actionTypes.SET_LOADED_RESTAURANTS:\r\n      return {\r\n        ...state,\r\n        refreshRestaurants:false,\r\n        items:action.payload.shops\r\n      };     \r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default restaurantReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst addressReducer = function (\r\n  state = {\r\n    curAddress: {},\r\n    defaultAddress: {},\r\n    addressList: [],\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_NEW_ADDRESS:\r\n      return {\r\n        ...state,\r\n        addressList:\r\n          state.addressList.length > 0\r\n            ? [...state.addressList, action.payload]\r\n            : [action.payload],\r\n      };\r\n    case actionTypes.SET_DEFAULT_ADDRESS:\r\n      return {\r\n        ...state,\r\n        defaultAddress: action.payload,\r\n      };\r\n    case actionTypes.SET_ADDRESS_LIST:\r\n      return {\r\n        ...state,\r\n        addressList: action.payload,\r\n      };\r\n\r\n    case actionTypes.SET_CUR_ADDRESS:\r\n      return {\r\n        ...state,\r\n        curAddress: action.payload,\r\n      };\r\n\r\n    case actionTypes.CLEAR_ADDRESS:\r\n      return {\r\n        ...state,\r\n        curAddress: {},\r\n        defaultAddress: {},\r\n        addressList: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default addressReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nconst allowedStatus = [2, 3, 4, 5, 77, 99];\r\nconst ordersReducer = function (\r\n  state = {\r\n    activeOrders: [],\r\n    allOrders: [],\r\n    orderStatus: {},\r\n    ratings: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.SET_ALL_ORDERS: {\r\n      return {\r\n        ...state,\r\n        allOrders: action.payload,\r\n      };\r\n    }\r\n    case actionTypes.ADD_NEW_ORDER: {\r\n      return {\r\n        ...state,\r\n        activeOrders:\r\n          state.activeOrders.length > 0\r\n            ? [...state.activeOrders, action.payload]\r\n            : [action.payload],\r\n      };\r\n    }\r\n    case actionTypes.SET_ACTIVE_ORDERS: {\r\n      if (action.payload.status === 1) {\r\n        return {\r\n          ...state,\r\n          activeOrders: action.payload.activeOrders,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          activeOrders: action.payload.activeOrders,\r\n          orderStatus: action.payload.statuses,\r\n          ratings: action.payload.rating\r\n        };\r\n      }\r\n    }\r\n    case actionTypes.CLEAR_ORDERS: {\r\n      return {\r\n        ...state,\r\n        activeOrders: {},\r\n        allOrders: {},\r\n      };\r\n    }\r\n    case actionTypes.SET_ORDER_STATUS: {\r\n      let ratings = [];\r\n      //Todo : Show Rating on delivered msg \r\n      // if(action.payload.ost === 5){\r\n      //   ratings.push(action.payload)\r\n      // }\r\n      if (allowedStatus.includes(action.payload.ost)) {\r\n        const elementsIndex = state.activeOrders.findIndex(\r\n          (element) => element.ordid === action.payload.id\r\n        );\r\n        let newActiveOrders = [...state.activeOrders];\r\n        newActiveOrders[elementsIndex] = {\r\n          ...newActiveOrders[elementsIndex],\r\n          ost: action.payload.ost,\r\n        };\r\n        return {\r\n          ...state,\r\n          activeOrders: newActiveOrders,\r\n          ratings: ratings\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ordersReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst packageReducer = function (\r\n  state = {\r\n    pickUpAddress: null,\r\n    dropAddress: null\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.SET_PICKUP_ADDRESS:\r\n      return {\r\n        pickUpAddress: action.payload\r\n      };\r\n    case actionTypes.SET_DROP_ADDRESS:\r\n      return {\r\n        ...state,\r\n        dropAddress: action.payload\r\n      };\r\n    case actionTypes.DELETE_PICKUP_ADDRESS:\r\n      return {\r\n        pickUpAddress: null\r\n      };\r\n    case actionTypes.DELETE_DROP_ADDRESS:\r\n      return {\r\n        ...state,\r\n        dropAddress: null\r\n      };     \r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default packageReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst notificationsReducer = function (\r\n  state = {\r\n    notificationsList: [],\r\n    refreshNotifications:true\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.SET_RELOAD_NOTIFICATIONS:\r\n      return {\r\n        ...state,\r\n        refreshNotifications:true\r\n      };\r\n    case actionTypes.SET_LOADED_NOTIFICATIONS:\r\n      return {\r\n        ...state,\r\n        refreshNotifications:false,\r\n        notificationsList:action.payload\r\n      };     \r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default notificationsReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport configReducer from \"./reducers/configReducer\";\r\nimport cartReducer from \"./reducers/cartReducer\";\r\nimport productReducer from \"./reducers/productReducer\";\r\nimport restaurantReducer from \"./reducers/restaurantReducer\";\r\nimport addressReducer from \"./reducers/addressReducer\";\r\nimport ordersReducer from \"./reducers/ordersReducer\";\r\nimport packageReducer from \"./reducers/packageReducer\";\r\nimport { loadState, saveState } from \"./localStorage\";\r\nimport notificationsReducer from \"./reducers/notificationsReducer\";\r\n\r\nconst persistedState = loadState();\r\n\r\nconst rootReducer = combineReducers({\r\n  config: configReducer,\r\n  cart: cartReducer,\r\n  product: productReducer,\r\n  restaurant: restaurantReducer,\r\n  address: addressReducer,\r\n  orders: ordersReducer,\r\n  notifications: notificationsReducer,\r\n  package: packageReducer,\r\n});\r\n\r\nconst Store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nStore.subscribe(\r\n  _.throttle(() => {\r\n    saveState({\r\n      cart: Store.getState().cart,\r\n      config: Store.getState().config,\r\n      address: Store.getState().address,\r\n      product: Store.getState().product,\r\n      orders: Store.getState().orders,\r\n      restaurant: Store.getState().restaurant,\r\n      package: Store.getState().package,\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nexport default Store;\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {\r\n    // die\r\n  }\r\n};\r\n"],"sourceRoot":""}