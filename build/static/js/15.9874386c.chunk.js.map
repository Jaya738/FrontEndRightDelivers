{"version":3,"sources":["Components/Common/MblNavbar.js","Components/addressEmpty.svg","../node_modules/react-bootstrap/esm/Image.js","Components/Dashboard/Address.js"],"names":["connect","state","config","cartCount","cart","cartItems","length","withRouter","props","className","style","position","padding","top","width","backgroundColor","zIndex","paddingTop","display","alignItems","onClick","back","fontSize","color","aria-hidden","heading","to","module","exports","Image","React","forwardRef","_ref","ref","bsPrefix","fluid","rounded","roundedCircle","thumbnail","_objectWithoutPropertiesLoose","useBootstrapPrefix","classes","classNames","createElement","_extends","displayName","defaultProps","CheckoutAddress","addressList","address","history","useHistory","useState","showToast","setShowToast","error","setError","curBranch","deleteAddress","a","apiUrl","baseUrl","data","address_id","id","options","method","headers","rKey","authData","dKey","body","JSON","stringify","fetchWithTimeout","json","res","status","msg","setAddressList","showAddress","marginTop","push","map","key","name","type","flat","area","src","noAddress","fontWeight","textAlign","errorToast","onClose","show","delay","autohide","bottom","left","transform","Body","borderBottom","dispatch","setCurAddress","payload","actionCreators","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","goBack"],"mappings":"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","file":"static/js/15.9874386c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction MblNavbar(props) {\r\n  const cartCount = props.cartCount;\r\n  const navStyle = {\r\n    position: \"fixed\",\r\n    padding: \"0.5rem 1rem\",\r\n    top: \"0\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#2F4F4F\",\r\n    zIndex: \"10\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed-top align-middle\" style={navStyle}>\r\n      <div\r\n        style={{\r\n          paddingTop: \"4vh\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          onClick={props.back}\r\n          style={{\r\n            fontSize: \"20px\",\r\n            color: \"white\",\r\n            padding: \"0px 20px\",\r\n          }}\r\n        >\r\n          <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n        </div>\r\n        <span\r\n          style={{\r\n            fontSize: \"18px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {props.heading}\r\n        </span>\r\n        <Link to=\"/dashboard/cart\" className=\"option_links ml-auto mr-3\">\r\n          <i className=\"uil uil-shopping-cart-alt icon_wishlist\"></i>\r\n          <span className=\"noti_count1\">{cartCount}</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    config: state.config,\r\n    cartCount: state.cart.cartItems.length,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(MblNavbar));\r\n","module.exports = __webpack_public_path__ + \"static/media/addressEmpty.121e5a15.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import MblNavbar from \"../Common/MblNavbar\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport * as geolib from \"geolib\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport \"../Checkout/Checkout.css\";\r\nimport noAddress from \"../addressEmpty.svg\";\r\nimport * as actionCreators from \"../../Store/actions/index\";\r\nimport { geolocated } from \"react-geolocated\";\r\nimport { baseUrl } from \"../../config\";\r\nimport {fetchWithTimeout} from '../../api';\r\n\r\nfunction CheckoutAddress(props) {\r\n  let addressList = props.address.addressList || [];\r\n  const history = useHistory();\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const mapData = props.config.curBranch;\r\n\r\n  //const [distanceR, setDistanceR] = useState(0);\r\n  const [isServicable, setIsServicable] = useState(true);\r\n  const [addNew, setAddNew] = useState(false);\r\n  const [selectedAddress, setSelectedAddress] = useState({});\r\n\r\n  const handleAddAddress = () => {\r\n    history.push(\"/addaddress\");\r\n  };\r\n\r\n  const editAddress = (address) => {\r\n    //setLoginData(address);\r\n    // setAddNew(true);\r\n    // deleteAddress(address);\r\n    return;\r\n  };\r\n  // const deleteAddress = (address) => {\r\n  //   addressList.splice(\r\n  //     addressList.findIndex(function (i) {\r\n  //       return i.id === address.id;\r\n  //     }),\r\n  //     1\r\n  //   );\r\n  // };\r\n\r\n  const deleteAddress = async (address) => {\r\n    const apiUrl = baseUrl + \"delete/address\";\r\n    const data = {\r\n      address_id: address.id\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n        rKey: props.config.authData.rKey,\r\n        dKey: props.config.authData.dKey,\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    const res = await (await fetchWithTimeout(apiUrl, options)).json();\r\n\r\n    if (res && res.status === 1) {\r\n      setError(res.msg);\r\n      setShowToast(true);\r\n      props.setAddressList(res.address)\r\n      return;\r\n    }\r\n    if (res) {\r\n      setError(res.msg);\r\n      setShowToast(true);\r\n      return;\r\n    }\r\n  }\r\n\r\n  const showAddress = (\r\n    <div className=\"row\" style={{ marginTop: \"6vh\" }}>\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <div className=\"pdpt-bg\">\r\n          <div className=\"pdpt-title\">\r\n            <h4>Manage Your Address</h4>\r\n          </div>\r\n          <div className=\"address-body\">\r\n            <button className=\"next-btn16 hover-btn\" onClick={handleAddAddress}>\r\n              Add New Address\r\n            </button>\r\n            <div className=\"address-spacing\">\r\n              {addressList.length > 0 ? (\r\n                addressList.map((address) => (\r\n                  <div key={address.id} className=\"address-item\">\r\n                    <div className=\"address-dt-all\">\r\n                      <h4>\r\n                        {address.name}{\" \"}\r\n                        <i\r\n                          style={{ color: \"#d30013\" }}\r\n                          className={\r\n                            address.type === 1\r\n                              ? \"fa fa-home\"\r\n                              : address.type === 2\r\n                              ? \"fa fa-briefcase\"\r\n                              : \"fa fa-map\"\r\n                          }\r\n                        ></i>\r\n                      </h4>{\" \"}\r\n                      <p>\r\n                        {address.flat}, {address.area}\r\n                      </p>\r\n                      <ul className=\"action-btns\">\r\n                        {/* <li>\r\n                          <div\r\n                            className=\"action-btn\"\r\n                            onClick={() => editAddress(address)}\r\n                          >\r\n                            <i className=\"uil uil-edit\"></i>\r\n                          </div>\r\n                        </li> */}\r\n                        <li>\r\n                          <div className=\"action-btn\" onClick={()=> deleteAddress(address)}>\r\n                            <i className=\"uil uil-trash-alt\"></i>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div>\r\n                  <Image src={noAddress} fluid />\r\n                  <p\r\n                    style={{\r\n                      color: \"#d30013\",\r\n                      fontSize: \"18px\",\r\n                      fontWeight: \"bold\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Start adding your address\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const errorToast = (\r\n    <Toast\r\n      onClose={() => setShowToast(false)}\r\n      show={showToast}\r\n      delay={2000}\r\n      autohide\r\n      style={{\r\n        position: \"fixed\",\r\n        bottom: \"20vh\",\r\n        zIndex: \"999\",\r\n        textAlign: \"center\",\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\",\r\n      }}\r\n    >\r\n      <Toast.Body\r\n        style={{\r\n          backgroundColor: \"#2f4f4f\",\r\n          color: \"white\",\r\n          borderBottom: \"none\",\r\n          textAlign: \"center\",\r\n          padding: \"0.2rem 0.8rem\",\r\n        }}\r\n      >\r\n        {<strong className=\"mr-auto\">{error}</strong>}\r\n      </Toast.Body>\r\n    </Toast>\r\n  );\r\n  return (\r\n    <>\r\n      {errorToast}\r\n      <div>{showAddress}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Address(props) {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <MblNavbar heading=\"Address\" back={() => history.goBack()} />\r\n      <CheckoutAddress {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    address: state.address,\r\n    config: state.config,\r\n    cart: state.cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCurAddress: (payload) => dispatch(actionCreators.setCurAddress(payload)),\r\n    setAddressList: (payload) =>\r\n      dispatch(actionCreators.setAddressList(payload)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(\r\n  geolocated({\r\n    positionOptions: {\r\n      enableHighAccuracy: true,\r\n    },\r\n    userDecisionTimeout: 5000,\r\n  })(Address)\r\n);\r\n"],"sourceRoot":""}